(define (problem tpp-p00_5places_5goals)
(:domain tpp)
(:objects
 mar0 mar1 mar2 mar3 mar4 - market
 dep0 dep1 dep2 dep3 dep4 - depot
 t0 - truck
 g0 g1 g2 g3 g4 - goods
)
(:init
    (= (total-cost) 0)
    (at t0 dep0)
    (connected mar0 dep0)
    (connected dep0 mar0)
    (= (drive-cost dep0 mar0) 10)
    (= (drive-cost dep0 dep0) 10)
    (connected mar0 mar1)
    (connected dep0 dep1)
    (= (drive-cost mar0 mar1) 10)
    (connected mar1 dep1)
    (connected dep1 mar1)
    (= (drive-cost dep1 mar1) 10)
    (= (drive-cost dep1 dep1) 10)
    (connected mar1 mar0)
    (connected dep1 dep0)
    (= (drive-cost mar1 mar0) 10)
    (connected mar2 dep2)
    (connected dep2 mar2)
    (= (drive-cost dep2 mar2) 10)
    (= (drive-cost dep2 dep2) 10)
    (connected mar3 dep3)
    (connected dep3 mar3)
    (= (drive-cost dep3 mar3) 10)
    (= (drive-cost dep3 dep3) 10)
    (connected mar3 mar4)
    (connected dep3 dep4)
    (= (drive-cost mar3 mar4) 10)
    (connected mar4 dep4)
    (connected dep4 mar4)
    (= (drive-cost dep4 mar4) 10)
    (= (drive-cost dep4 dep4) 10)
    (connected mar4 mar3)
    (connected dep4 dep3)
    (= (drive-cost mar4 mar3) 10)
    (on-sale g0 mar4)
    (available g0 mar4)
    (= (price g0 mar4) 1)
    (on-sale g1 mar3)
    (available g1 mar3)
    (= (price g1 mar3) 1)
    (on-sale g2 mar1)
    (available g2 mar1)
    (= (price g2 mar1) 1)
    (on-sale g3 mar0)
    (available g3 mar0)
    (= (price g3 mar0) 1)
)
(:goal (and
    (stored g0)
    (stored g1)
    (stored g2)
    (stored g3)
    (stored g4)
))
(:metric minimize (total-cost))
)
